services:
  # MySQL for the other services (posts, comments, main)
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: posts_db
    ports:
      - "3306:3306"
    volumes:
      - ./db-data/mysql-db-data:/var/lib/mysql
      - ./init/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "mysql -uroot -prootpassword -e 'use main_db;'"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL for Comments Service
  postgres-db:
    image: postgres:17
    container_name: postgres-db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: comments_db
    ports:
      - "5432:5432"
    volumes:
      - ./db-data/postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres && psql -U postgres -d comments_db",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB for the auth service
  mongo_db:
    image: mongo:8.0
    container_name: mongodb-db
    environment:
      MONGODB_INITDB_ROOT_USERNAME: root
      MONGODB_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - "27017:27017"
    volumes:
      - ./db-data/mongo-data:/data/db

  # Authentication Service (using MongoDB)
  auth-app:
    build: ./AuthenticationServer/
    container_name: auth-service
    image: dhruv4023/auth-server:latest
    ports:
      - "${AUTH_APP_PORT}:${AUTH_APP_PORT}"
    depends_on:
      mongo_db:
        condition: service_started
    environment:
      APP_PORT: ${AUTH_APP_PORT}
      DB_URL: ${MONGO_DB_URL} 
      DB_NAME: ${MONGO_DB_NAME} 
      SENDER_EMAIL: ${SENDER_EMAIL}
      SENDER_PASSWORD: ${SENDER_PASSWORD}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}

  # Posts Service (using MySQL)
  posts-app:
    build: ./PostServer/
    container_name: post-service
    image: dhruv4023/post-server:latest
    ports:
      - "5002:5002"
    depends_on:
      mysql-db:
        condition: service_healthy
    environment:
      DB_HOST: mysql-db
      DB_USER: root
      DB_PASSWORD: rootpassword
      DB_NAME: posts_db
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}

  # Comments Service (using Postgres)
  comments-app:
    build: ./CommentServer/
    container_name: comments-service
    image: dhruv4023/comments-server:latest
    ports:
      - "5003:5003"
    depends_on:
      postgres-db:
        condition: service_healthy
    environment:
      DB_NAME: comments_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: postgres-db
      DB_DIALECT: postgres
      DB_PORT: 5432

  # Main Service (using MySQL)
  main-app:
    build: ./ManageAllMicroService/
    container_name: main-service
    image: dhruv4023/main-server:latest
    ports:
      - "5000:5000"
    depends_on:
      mysql-db:
        condition: service_healthy
      auth-app:
        condition: service_started
      posts-app:
        condition: service_started
      comments-app:
        condition: service_started
    environment:
      DB_HOST: mysql-db
      DB_USER: root
      DB_PASSWORD: rootpassword
      DB_NAME: main_db
      APP_HOST: ${APP_HOST}
      AUTH_API_END: ${MAIN_AUTH_API_END}
      POST_API_END: ${MAIN_POST_API_END}
      COMMENTS_API_END: ${MAIN_COMMENTS_API_END}
# volumes:
#   mysql-db-data:
#   mongo-data:
#   postgres-data:
